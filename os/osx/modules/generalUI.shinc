#!/usr/bin/env bash
. $SHELL_LIBRARY_PATH/avoidDoubleInclusion.sh

function generalUI__removeIcons {
  echo "" 
  echo "Hide the Time Machine, Volume, User, and Bluetooth icons" 
  for domain in ~/Library/Preferences/ByHost/com.apple.systemuiserver.*; do 
    defaults write "${domain}" dontAutoLoad -array \ 
    "/System/Library/CoreServices/Menu Extras/TimeMachine.menu" \ 
    "/System/Library/CoreServices/Menu Extras/Volume.menu" \ 
    "/System/Library/CoreServices/Menu Extras/User.menu" 
  done 
  defaults write com.apple.systemuiserver menuExtras -array \ 
  "/System/Library/CoreServices/Menu Extras/Bluetooth.menu" \ 
  "/System/Library/CoreServices/Menu Extras/Battery.menu" \ 
  "/System/Library/CoreServices/Menu Extras/Clock.menu" 
}

function generalUI__disableGK {
  echo "" 
  echo "Disabling OS X Gate Keeper" 
  echo "(You'll be able to install any app you want from here on, not just Mac App Store apps)" 
  sudo spctl --master-disable 
  sudo defaults write /var/db/SystemPolicy-prefs.plist enabled -string no 
  defaults write com.apple.LaunchServices LSQuarantine -bool false 
}

function generalUI__incrWindResize {
  echo "" 
  echo "Increasing the window resize speed for Cocoa applications" 
  defaults write NSGlobalDomain NSWindowResizeTime -float 0.001 
}

function generalUI__expSavePanel {
  echo "" 
  echo "Expanding the save panel by default" 
  defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true 
  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true 
  defaults write NSGlobalDomain PMPrintingExpandedStateForPrint2 -bool true 
}

function generalUI__autoQuitPrinter {
  echo "" 
  echo "Automatically quit printer app once the print jobs complete" 
  defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true 
}

function generalUI__showCtrlChars {
  echo "" 
  echo "Displaying ASCII control characters using caret notation in standard text views" 
  defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true 
}

function generalUI__disableSysResume {
  echo "" 
  echo "Disabling system-wide resume" 
  defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool false 
}

function generalUI__disableAutoTerminate {
  echo "" 
  echo "Disabling automatic termination of inactive apps" 
  defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true 
}

function generalUI__saveToDisk {
  echo "" 
  echo "Saving to disk (not to iCloud) by default" 
  defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false 
}

function generalUI__hostInfoOnLogin {
  echo "" 
  echo "Reveal IP address, hostname, OS version, etc. when clicking the clock in the login window" 
  sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName 
}

function generalUI__sleepModeOff {
  echo "" 
  echo "Never go into computer sleep mode" 
  systemsetup -setcomputersleep Off > /dev/null 
}

function generalUI__dailySoftUpdate {
  echo "" 
  echo "Check for software updates daily, not just once per week" 
  defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1 
}

function generalUI__disableSmartQuotes {
  echo "" 
  echo "Disable smart quotes and smart dashes as they're annoying when typing code" 
  defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false 
  defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false 
}















matthewmueller / dots
https://github.com/matthewmueller/dots.git

Dans le 
New User
# Check for Homebrew,
# Install if we don't have it
if test ! $(which brew); then
  echo "Installing homebrew..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
fi

# Update homebrew recipes
echo "Updating homebrew..."
brew update


# Install GNU core utilities (those that come with OS X are outdated)
echo "Installing coreutils..."
brew install coreutils

# Install GNU 'find', 'locate', 'updatedb', and 'xargs', g-prefixed
echo "Installing findutils..."
brew install findutils

# Install Bash 4
echo "Installing bash4..."
brew install bash

# Install more recent versions of some OS X tools
#brew tap homebrew/dupes
#brew install homebrew/dupes/grep

# Install git
echo "Installing git..."
brew install git

# Install python
echo "Installing python..."
brew install python

# Install Cask
echo "Installing Homebrew Cask..."
brew install caskroom/cask/brew-cask

# Apps
apps=(
  dropbox
  transmission
  docker-machine
  vagrant
  rstudio
  evernote
  ipvanish-vpn
  vlc
)
# Install Apps to /Applications
# Default is: /Users/$user/Applications
echo "Installing apps..."
brew cask install --appdir="/Applications" ${apps[@]}


# Cleanup
#echo "Doing some cleanup..."
brew cleanup

pip install mackup
mackup backup








~/.bash_profile: $PATH=$(brew --prefix coreutils)/libexec/gnubin:$PATH